apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: "kubescape-c-0270-deny-resources-with-cpu-limit-not-set"
  labels:
    controlId: "C-0270"
  annotations:
    controlUrl: "https://kubescape.io/docs/controls/c-0270/"
spec:
  failurePolicy: Fail
  paramKind:
    apiVersion: kubescape.io/v1
    kind: ControlConfiguration
  matchConstraints:
    resourceRules:
    - apiGroups:   [""]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["pods"]
    - apiGroups:   ["apps"]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["deployments","replicasets","daemonsets","statefulsets"]
    - apiGroups:   ["batch"]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["jobs","cronjobs"]
  variables:
    - expression: |
        object.kind == 'Pod' ? object.spec.containers
        : object.kind in ['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'] ? object.spec.template.spec.containers
        : object.kind == 'CronJob' ? object.spec.jobTemplate.spec.template.spec.containers
        : []
      name: containers
  validations:
    - expression: >
        variables.containers.all(container,
        (!(!(has(container.resources)) || !(has(container.resources.limits)) || !(has(container.resources.limits.cpu))) &&
        quantity(string(params.settings.cpuLimitMin)).compareTo(quantity(string(container.resources.limits.cpu))) != 1 &&
        quantity(string(params.settings.cpuLimitMax)).compareTo(quantity(string(container.resources.limits.cpu))) != -1 ))
      messageExpression: 'object.kind + "/" + object.metadata.name + " contains container/s with cpu limit not set or they are not in the specified range! (see more at https://kubescape.io/docs/controls/c-0270/)"'
